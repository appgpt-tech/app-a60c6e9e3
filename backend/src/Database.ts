//Source code generated by AppGPT (www.appgpt.tech)

//Class to create tables and seed new database
import { DataSource } from 'typeorm';
import { DBConfiguration } from './Configuration';
import { SettingsEntity } from './db/Settings.entity';
//autogenerate imports based on resources
import { TracksEntity } from './db/Tracks.entity';
import { ArtistsEntity } from './db/Artists.entity';
import { AlbumsEntity } from './db/Albums.entity';
import { PlaylistsEntity } from './db/Playlists.entity';
import { UsersEntity } from './db/Users.entity';

export class Database {
  static dbConfiguration: DBConfiguration;
  public static ds: DataSource;

  static async Initialize(dbConfiguration: DBConfiguration) {
    Database.dbConfiguration = dbConfiguration;
    let dbConfig: any = dbConfiguration as any;
    //Autogenerate entities array from resource names

    dbConfig.entities = [
      SettingsEntity,
      TracksEntity,
      ArtistsEntity,
      AlbumsEntity,
      PlaylistsEntity,
      UsersEntity,
    ];
    Database.ds = new DataSource(dbConfig);
    await Database.ds.initialize();

    //TODO: Drop all tables

    await Database.Seed();
  }
  static async Seed() {
    let data: any = {
      Tracks: [
        {
          artist: 1,
          title: 'title 1',
          genre: 'genre 1',
          releaseDate: '2023-11-02T18:49:44.064Z',
          id: 80,
        },
        {
          artist: 2,
          title: 'title 2',
          genre: 'genre 2',
          releaseDate: '2023-07-15T01:11:55.494Z',
          id: 15,
        },
        {
          artist: 3,
          title: 'title 3',
          genre: 'genre 3',
          releaseDate: '2023-08-04T12:51:12.882Z',
          id: 19,
        },
        {
          artist: 4,
          title: 'title 4',
          genre: 'genre 4',
          releaseDate: '2024-08-07T18:27:05.231Z',
          id: 77,
        },
        {
          artist: 5,
          title: 'title 5',
          genre: 'genre 5',
          releaseDate: '2025-03-27T00:46:49.597Z',
          id: 42,
        },
      ],
      Artists: [
        { name: 'name 1', genre: 'genre 1', tracks: 1, id: 19 },
        { name: 'name 2', genre: 'genre 2', tracks: 2, id: 46 },
        { name: 'name 3', genre: 'genre 3', tracks: 3, id: 96 },
        { name: 'name 4', genre: 'genre 4', tracks: 4, id: 62 },
        { name: 'name 5', genre: 'genre 5', tracks: 5, id: 34 },
      ],
      Albums: [
        {
          title: 'title 1',
          releaseDate: '2025-03-04T08:14:10.373Z',
          artist: 1,
          tracks: 1,
          genre: 'genre 1',
          id: 60,
        },
        {
          title: 'title 2',
          releaseDate: '2023-09-13T08:30:22.187Z',
          artist: 2,
          tracks: 2,
          genre: 'genre 2',
          id: 67,
        },
        {
          title: 'title 3',
          releaseDate: '2023-05-09T12:30:32.438Z',
          artist: 3,
          tracks: 3,
          genre: 'genre 3',
          id: 92,
        },
        {
          title: 'title 4',
          releaseDate: '2024-10-23T11:23:47.890Z',
          artist: 4,
          tracks: 4,
          genre: 'genre 4',
          id: 11,
        },
        {
          title: 'title 5',
          releaseDate: '2025-03-27T07:36:52.593Z',
          artist: 5,
          tracks: 5,
          genre: 'genre 5',
          id: 7,
        },
      ],
      Playlists: [
        { name: 'name 1', creator: 1, tracks: 1, id: 97 },
        { name: 'name 2', creator: 2, tracks: 2, id: 32 },
        { name: 'name 3', creator: 3, tracks: 3, id: 80 },
        { name: 'name 4', creator: 4, tracks: 4, id: 64 },
        { name: 'name 5', creator: 5, tracks: 5, id: 80 },
      ],
      Users: [
        {
          username: 'username 1',
          email: 'email 1',
          password: 'password 1',
          playlists: 1,
          id: 60,
        },
        {
          username: 'username 2',
          email: 'email 2',
          password: 'password 2',
          playlists: 2,
          id: 8,
        },
        {
          username: 'username 3',
          email: 'email 3',
          password: 'password 3',
          playlists: 3,
          id: 3,
        },
        {
          username: 'username 4',
          email: 'email 4',
          password: 'password 4',
          playlists: 4,
          id: 79,
        },
        {
          username: 'username 5',
          email: 'email 5',
          password: 'password 5',
          playlists: 5,
          id: 65,
        },
      ],
    };
    //Autogenerate multiple such calls ie for each resource and its data object
    let isSeeded = await this.IsSeeded();
    //if (!isSeeded) {
    //forcing app recreation
    if (true) {
      console.log('   Seeding database...');
      await this.SeedResource('TracksEntity', data.Tracks);
      await this.SeedResource('ArtistsEntity', data.Artists);
      await this.SeedResource('AlbumsEntity', data.Albums);
      await this.SeedResource('PlaylistsEntity', data.Playlists);
      await this.SeedResource('UsersEntity', data.Users);
      await this.SeedResource('SettingsEntity', {
        settingname: 'isSeeded',
        settingvalue: 'true',
      });
    } else {
      console.log('   Database seeded already!');
    }
  }
  static async IsSeeded() {
    const repo = Database.ds.getRepository('SettingsEntity');
    let rec: any = await repo.findOne({
      select: {
        settingname: true,
        settingvalue: true,
      },
      where: {
        settingname: 'isSeeded',
      },
    });
    if (rec && rec.settingvalue) return true;
    return false;
  }
  static async SeedResource(resourceName: any, resourceData: any) {
    const repo = Database.ds.getRepository(resourceName);
    //await repo.clear();
    console.log('   Seeding table ' + resourceName);
    await repo.upsert(resourceData, ['id']);
  }
}
